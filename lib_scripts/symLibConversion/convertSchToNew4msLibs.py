import sys
sys.path.append('../')
import fileUtil
from convertClass import *

conversions = []
#import conv_resistors
#import conv_caps
conversions.append(Convert('4ms-passives:R', '1.1k', '4ms_Resistor:1.1k_0603'))
conversions.append(Convert('4ms-passives:R', '1.2k', '4ms_Resistor:1.2k_0603'))
conversions.append(Convert('4ms-passives:R', '10.2k', '4ms_Resistor:10.2k_0603'))
conversions.append(Convert('4ms-passives:R', '100k', '4ms_Resistor:100k_0603'))
conversions.append(Convert('4ms-passives:R', '10R', '4ms_Resistor:10R_0603'))
conversions.append(Convert('4ms-passives:R', '10k', '4ms_Resistor:10k_0603'))
conversions.append(Convert('4ms-passives:R', '10m', '4ms_Resistor:10m_1206_250mW'))
conversions.append(Convert('4ms-passives:R', '13k', '4ms_Resistor:13k_0603'))
conversions.append(Convert('4ms-passives:R', '15k', '4ms_Resistor:15k_0603'))
conversions.append(Convert('4ms-passives:R', '16.5k', '4ms_Resistor:16.5k_0603'))
conversions.append(Convert('4ms-passives:R', '18R', '4ms_Resistor:18R_0603'))
conversions.append(Convert('4ms-passives:R', '18R', '4ms_Resistor:18R_0603_0.1%'))
conversions.append(Convert('4ms-passives:R', '191R', '4ms_Resistor:191R_0603_0.1%'))
conversions.append(Convert('4ms-passives:R', '1M', '4ms_Resistor:1M_0603'))
conversions.append(Convert('4ms-passives:R', '1k', '4ms_Resistor:1k_0603'))
conversions.append(Convert('4ms-passives:R', '1k', '4ms_Resistor:1k_0603_0.1%'))
conversions.append(Convert('4ms-passives:R', '2k7', '4ms_Resistor:2.7k_0603'))
conversions.append(Convert('4ms-passives:R', '2.7k', '4ms_Resistor:2.7k_0603'))
conversions.append(Convert('4ms-passives:R', '200k', '4ms_Resistor:200k_0603'))
conversions.append(Convert('4ms-passives:R', '220R', '4ms_Resistor:220R_0603'))
conversions.append(Convert('4ms-passives:R', '22k', '4ms_Resistor:22k_0603'))
conversions.append(Convert('4ms-passives:R', '2k', '4ms_Resistor:2k_0603'))
conversions.append(Convert('4ms-passives:R', '300k', '4ms_Resistor:300k_0603'))
conversions.append(Convert('4ms-passives:R', '30R', '4ms_Resistor:30R_0603'))
conversions.append(Convert('4ms-passives:R', '330R', '4ms_Resistor:330R_0603'))
conversions.append(Convert('4ms-passives:R', '33k', '4ms_Resistor:33k_0603'))
conversions.append(Convert('4ms-passives:R', '34.8k', '4ms_Resistor:34.8k_0603'))
conversions.append(Convert('4ms-passives:R', '4k7', '4ms_Resistor:4.7k_0603'))
conversions.append(Convert('4ms-passives:R', '4.7k', '4ms_Resistor:4.7k_0603'))
conversions.append(Convert('4ms-passives:R', '40.2k', '4ms_Resistor:40.2k_0603'))
conversions.append(Convert('4ms-passives:R', '42.2k', '4ms_Resistor:42.2k_0603'))
conversions.append(Convert('4ms-passives:R', '470R', '4ms_Resistor:470R_0805_350mW'))
conversions.append(Convert('4ms-passives:R', '47k', '4ms_Resistor:47k_0603'))
conversions.append(Convert('4ms-passives:R', '49.9k', '4ms_Resistor:49.9k_0603'))
conversions.append(Convert('4ms-passives:R', '52.3k', '4ms_Resistor:52.3k_0603'))
conversions.append(Convert('4ms-passives:R', '6.04k', '4ms_Resistor:6.04k_0603'))
conversions.append(Convert('4ms-passives:R', '6.2k', '4ms_Resistor:6.2k_0603'))
conversions.append(Convert('4ms-passives:R', '6.34k', '4ms_Resistor:6.34k_0603'))
conversions.append(Convert('4ms-passives:R', '6.8k', '4ms_Resistor:6.8k_0603'))
conversions.append(Convert('4ms-passives:R', '680R', '4ms_Resistor:680R_0603'))
conversions.append(Convert('4ms-passives:R', '68R', '4ms_Resistor:68R_0603'))
conversions.append(Convert('4ms-passives:R', '68R', '4ms_Resistor:68R_0805_350mW'))
conversions.append(Convert('4ms-passives:R', '68k', '4ms_Resistor:68k_0603'))
conversions.append(Convert('4ms-passives:R', '7.68k', '4ms_Resistor:7.68k_0603'))
conversions.append(Convert('4ms-passives:R', '732R', '4ms_Resistor:732R_0603'))
conversions.append(Convert('4ms-passives:R', '750R', '4ms_Resistor:750R_0603'))
conversions.append(Convert('4ms-passives:R', '750R', '4ms_Resistor:750R_0603_0.1%'))
conversions.append(Convert('4ms-passives:R', '75R', '4ms_Resistor:75R_0603'))
conversions.append(Convert('4ms-passives:R', '75k', '4ms_Resistor:75k_0603'))
conversions.append(Convert('4ms-passives:R', '820k', '4ms_Resistor:820k_0603'))
conversions.append(Convert('4ms-passives:R', '9.09k', '4ms_Resistor:9.09k_0603'))
conversions.append(Convert('4ms-passives:C_Small', '1.5nF', '4ms_Capacitor:1.5nF_0603_50V'))
conversions.append(Convert('4ms-passives:C_Small', '0.1uF', '4ms_Capacitor:100nF_0603_16V'))
conversions.append(Convert('4ms-passives:C_Small', '100nF', '4ms_Capacitor:100nF_0603_16V'))
conversions.append(Convert('4ms-passives:C_Small', '0.01uF', '4ms_Capacitor:10nF_0603_25V'))
conversions.append(Convert('4ms-passives:C_Small', '10nF', '4ms_Capacitor:10nF_0603_25V'))
#conversions.append(Convert('4ms-passives:C', '10uF', '4ms_Capacitor:10uF_0603_10V'))
#conversions.append(Convert('4ms-passives:C', '10uF', '4ms_Capacitor:10uF_0805_25V'))
#conversions.append(Convert('4ms-passives:C', '10uF', '4ms_Capacitor:10uF_1206_25V'))
#conversions.append(Convert('4ms-passives:C', '10uF', '4ms_Capacitor:10uF_1206_35V'))
#conversions.append(Convert('4ms-passives:C', '10uF', '4ms_Capacitor:10uF_1210_35V'))
conversions.append(Convert('4ms-passives:C_Small', '18pF', '4ms_Capacitor:18pF_0603_50V'))
conversions.append(Convert('4ms-passives:C_Small', '1nF', '4ms_Capacitor:1nF_0603_50V'))
conversions.append(Convert('4ms-passives:C_Small', '1uF', '4ms_Capacitor:1uF_0603_25V'))
conversions.append(Convert('4ms-passives:C_Small', '2.2uF', '4ms_Capacitor:2.2uF_0603_25V'))
conversions.append(Convert('4ms-passives:C_Small', '2.2uF', '4ms_Capacitor:2.2uF_0603_35V'))
conversions.append(Convert('4ms-passives:C_Small', '2.2uF', '4ms_Capacitor:2.2uF_0805_35V'))
conversions.append(Convert('4ms-passives:C_Small', '20pF', '4ms_Capacitor:20pF_0603_25V'))
conversions.append(Convert('4ms-passives:C_Small', '20pF', '4ms_Capacitor:20pF_0603_50V'))
conversions.append(Convert('4ms-passives:C_Small', '220pF', '4ms_Capacitor:220pF_0603_25V'))
# conversions.append(Convert('4ms-passives:C', '22uF', '4ms_Capacitor:22uF_0603_16V'))
# conversions.append(Convert('4ms-passives:C', '22uF', '4ms_Capacitor:22uF_0805_10V'))
# conversions.append(Convert('4ms-passives:C', '22uF', '4ms_Capacitor:22uF_0805_25V'))
# conversions.append(Convert('4ms-passives:C', '22uF', '4ms_Capacitor:22uF_0805_6.3V'))
# conversions.append(Convert('4ms-passives:C', '22uF', '4ms_Capacitor:22uF_1206_25V'))
# conversions.append(Convert('4ms-passives:C', '22uF', '4ms_Capacitor:22uF_1210_16V'))
conversions.append(Convert('4ms-passives:C_Small', '330pF', '4ms_Capacitor:330pF_0603_35V'))
# conversions.append(Convert('4ms-passives:C', '33uF', '4ms_Capacitor:33uF_NP_6.3x5.3_16V'))
conversions.append(Convert('4ms-passives:C_Small', '4.7nF', '4ms_Capacitor:4.7nF_0603_25V'))
conversions.append(Convert('4ms-passives:C_Small', '470pF', '4ms_Capacitor:470pF_0603_25V'))
conversions.append(Convert('4ms-passives:C_Small', '47nF', '4ms_Capacitor:47nF_0603_35V'))
conversions.append(Convert('4ms-passives:C_Small', '47pF', '4ms_Capacitor:47pF_0603_50V'))
conversions.append(Convert('4ms-passives:CP1_Small', '47uF', '4ms_Capacitor:47uF_5x5.3_16V'))
conversions.append(Convert('4ms-passives:C_Small', '8.2nF', '4ms_Capacitor:8.2nF_0603_50V'))
conversions.append(Convert('4ms-passives:C_Small', '9pF', '4ms_Capacitor:9pF_0603_50V'))

if __name__ == "__main__":
    if len(sys.argv) > 1:
        input_dir = sys.argv[1]
        input_dir = fileUtil.appendSlash(input_dir)
        print("Using input directory: "+input_dir)
        sch_files = fileUtil.loadFilesWithExt(input_dir, ".sch")

        for conv in conversions:
            print("Converting components with library "+conv.old_lib+
                " and value "+conv.old_val+
                " to library "+conv.new_lib)
            for sch in sch_files:
                sch_files[sch] = conv.convertSchematic(sch_files[sch])

        fileUtil.writeFiles(sch_files)

#vim commands to convert .lib file to list of conversions:
#:v/^DEF/d
#:%s/DEF \([^ ]*\) .*/4ms_Resistor:\1/
#:%s/4ms_Resistor:\([0-9\.]\+[kMmR]\)_\(.*\)/conversions.append(Convert('4ms-passives:R', '\1', '4ms_Resistor:\1_\2'))
#:%s/4ms_Capacitor:\([0-9\.]\+[unp]\)F_\(.*\)/conversions.append(Convert('4ms-passives:C_Small', '\1', '4ms_Capacitor:\1_\2'))
